<!DOCTYPE html>
<html lang="en-US">
<head>
		<!--[if lt IE 9]>
	<script src="https://www.dataquest.io/wp-content/themes/ignition/js/html5/dist/html5shiv.js"></script>
	<script src="//css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js"></script>
	<![endif]-->
	<!--[if IE 8]>
	<link rel="stylesheet" type="text/css" href="https://www.dataquest.io/wp-content/themes/ignition/css/ie8.css"/>
	<![endif]-->
	<!--[if IE 7]>
	<link rel="stylesheet" type="text/css" href="https://www.dataquest.io/wp-content/themes/ignition/css/ie7.css"/>
	<![endif]-->
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	<meta charset="UTF-8">
	
			<link rel="stylesheet" href="https://use.typekit.net/nmj4kuc.css">


			<title>Excel vs Python: How to Do Common Data Analysis Tasks &ndash; Dataquest</title>

<!-- This site is optimized with the Yoast SEO Premium plugin v12.5.1 - https://yoast.com/wordpress/plugins/seo/ -->
<meta name="description" content="What&#039;s the difference between Excel and Python? In this tutorial, we&#039;ll compare by looking at how to perform basic analysis tasks across both platforms."/>
<meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1"/>
<link rel="canonical" href="https://www.dataquest.io/blog/excel-vs-python/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Excel vs Python: How to Do Common Data Analysis Tasks &ndash; Dataquest" />
<meta property="og:description" content="What&#039;s the difference between Excel and Python? In this tutorial, we&#039;ll compare by looking at how to perform basic analysis tasks across both platforms." />
<meta property="og:url" content="https://www.dataquest.io/blog/excel-vs-python/" />
<meta property="og:site_name" content="Dataquest" />
<meta property="article:publisher" content="https://www.facebook.com/dataquestio" />
<meta property="article:tag" content="compare" />
<meta property="article:tag" content="excel" />
<meta property="article:tag" content="if then" />
<meta property="article:tag" content="join" />
<meta property="article:tag" content="learning pandas" />
<meta property="article:tag" content="learning python" />
<meta property="article:tag" content="merge" />
<meta property="article:tag" content="Pandas" />
<meta property="article:tag" content="pivot table" />
<meta property="article:tag" content="python" />
<meta property="article:tag" content="vlookup" />
<meta property="article:section" content="Data Science Tutorials" />
<meta property="article:published_time" content="2019-12-03T09:38:12-08:00" />
<meta property="og:image" content="https://www.dataquest.io/wp-content/uploads/2019/02/xlwings-tutorial-python-excel.jpg" />
<meta property="og:image:secure_url" content="https://www.dataquest.io/wp-content/uploads/2019/02/xlwings-tutorial-python-excel.jpg" />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="764" />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:description" content="What&#039;s the difference between Excel and Python? In this tutorial, we&#039;ll compare by looking at how to perform basic analysis tasks across both platforms." />
<meta name="twitter:title" content="Excel vs Python: How to Do Common Data Analysis Tasks &ndash; Dataquest" />
<meta name="twitter:site" content="@dataquestio" />
<meta name="twitter:image" content="https://www.dataquest.io/wp-content/uploads/2019/02/xlwings-tutorial-python-excel.jpg" />
<meta name="twitter:creator" content="@dataquestio" />
<script type='application/ld+json' class='yoast-schema-graph yoast-schema-graph--main'>{"@context":"https://schema.org","@graph":[{"@type":"Organization","@id":"https://www.dataquest.io/#organization","name":"Dataquest","url":"https://www.dataquest.io/","sameAs":["https://www.facebook.com/dataquestio","https://www.linkedin.com/company/dataquest-io","https://twitter.com/dataquestio"],"logo":{"@type":"ImageObject","@id":"https://www.dataquest.io/#logo","url":"https://www.dataquest.io/wp-content/uploads/2019/01/Logo-On-Light-BLUE.png","width":2001,"height":427,"caption":"Dataquest"},"image":{"@id":"https://www.dataquest.io/#logo"}},{"@type":"WebSite","@id":"https://www.dataquest.io/#website","url":"https://www.dataquest.io/","name":"Dataquest","publisher":{"@id":"https://www.dataquest.io/#organization"},"potentialAction":{"@type":"SearchAction","target":"https://www.dataquest.io/?s={search_term_string}","query-input":"required name=search_term_string"}},{"@type":"ImageObject","@id":"https://www.dataquest.io/blog/excel-vs-python/#primaryimage","url":"https://www.dataquest.io/wp-content/uploads/2019/02/xlwings-tutorial-python-excel.jpg","width":1200,"height":764,"caption":"excel-vs-python"},{"@type":"WebPage","@id":"https://www.dataquest.io/blog/excel-vs-python/#webpage","url":"https://www.dataquest.io/blog/excel-vs-python/","inLanguage":"en-US","name":"Excel vs Python: How to Do Common Data Analysis Tasks &ndash; Dataquest","isPartOf":{"@id":"https://www.dataquest.io/#website"},"primaryImageOfPage":{"@id":"https://www.dataquest.io/blog/excel-vs-python/#primaryimage"},"datePublished":"2019-12-03T09:38:12-08:00","dateModified":"2019-12-03T09:38:12-08:00","description":"What's the difference between Excel and Python? In this tutorial, we'll compare by looking at how to perform basic analysis tasks across both platforms."},{"@type":"Article","@id":"https://www.dataquest.io/blog/excel-vs-python/#article","isPartOf":{"@id":"https://www.dataquest.io/blog/excel-vs-python/#webpage"},"author":{"@id":"https://www.dataquest.io/#/schema/person/54c1172c792879ccebbb1aecafa3e133"},"headline":"Excel vs Python: How to Do Common Data Analysis Tasks","datePublished":"2019-12-03T09:38:12-08:00","dateModified":"2019-12-03T09:38:12-08:00","commentCount":0,"mainEntityOfPage":{"@id":"https://www.dataquest.io/blog/excel-vs-python/#webpage"},"publisher":{"@id":"https://www.dataquest.io/#organization"},"image":{"@id":"https://www.dataquest.io/blog/excel-vs-python/#primaryimage"},"keywords":"compare,excel,if then,join,learning pandas,learning python,merge,Pandas,pivot table,python,vlookup","articleSection":"Data Science Tutorials"},{"@type":["Person"],"@id":"https://www.dataquest.io/#/schema/person/54c1172c792879ccebbb1aecafa3e133","name":"Josh Devlin","image":{"@type":"ImageObject","@id":"https://www.dataquest.io/#authorlogo","url":"https://secure.gravatar.com/avatar/488062fe3e2d6bbf1da752fa6d89c37f?s=96&d=identicon&r=g","caption":"Josh Devlin"},"description":"Data Scientist at Dataquest.io. Loves Data and Aussie Rules Football. Australian living in Texas.","sameAs":[]}]}</script>
<!-- / Yoast SEO Premium plugin. -->

<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="Dataquest &raquo; Excel vs Python: How to Do Common Data Analysis Tasks Comments Feed" href="https://www.dataquest.io/blog/excel-vs-python/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/12.0.0-1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/12.0.0-1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.dataquest.io\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.3"}};
			!function(e,a,t){var r,n,o,i,p=a.createElement("canvas"),s=p.getContext&&p.getContext("2d");function c(e,t){var a=String.fromCharCode;s.clearRect(0,0,p.width,p.height),s.fillText(a.apply(this,e),0,0);var r=p.toDataURL();return s.clearRect(0,0,p.width,p.height),s.fillText(a.apply(this,t),0,0),r===p.toDataURL()}function l(e){if(!s||!s.fillText)return!1;switch(s.textBaseline="top",s.font="600 32px Arial",e){case"flag":return!c([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])&&(!c([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!c([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]));case"emoji":return!c([55357,56424,55356,57342,8205,55358,56605,8205,55357,56424,55356,57340],[55357,56424,55356,57342,8203,55358,56605,8203,55357,56424,55356,57340])}return!1}function d(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(i=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},o=0;o<i.length;o++)t.supports[i[o]]=l(i[o]),t.supports.everything=t.supports.everything&&t.supports[i[o]],"flag"!==i[o]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[i[o]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(r=t.source||{}).concatemoji?d(r.concatemoji):r.wpemoji&&r.twemoji&&(d(r.twemoji),d(r.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='wp-block-library-css'  href='https://www.dataquest.io/wp-includes/css/dist/block-library/style.min.css?ver=5.3' type='text/css' media='all' />
<link rel='stylesheet' id='searchandfilter-css'  href='https://www.dataquest.io/wp-content/plugins/search-filter/style.css?ver=1' type='text/css' media='all' />
<link rel='stylesheet' id='bodhi-svgs-attachment-css'  href='https://www.dataquest.io/wp-content/plugins/svg-support/css/svgs-attachment.css?ver=5.3' type='text/css' media='all' />
<link rel='stylesheet' id='tve_style_family_tve_flt-css'  href='https://www.dataquest.io/wp-content/plugins/thrive-visual-editor/editor/css/thrive_flat.css?ver=2.4.5.1' type='text/css' media='all' />
<link rel='stylesheet' id='tve_leads_forms-css'  href='//www.dataquest.io/wp-content/plugins/thrive-leads/editor-layouts/css/frontend.css?ver=2.2.6.1' type='text/css' media='all' />
<link rel='stylesheet' id='l2h_style-css'  href='https://www.dataquest.io/wp-content/plugins/latex2html/inc/css/latex.min.css?ver=2.3.7' type='text/css' media='screen, print' />
<link rel='stylesheet' id='l2h_print_style-css'  href='https://www.dataquest.io/wp-content/plugins/latex2html/inc/css/print.min.css?ver=2.3.7' type='text/css' media='print' />
<link rel='stylesheet' id='jquery-data-tables-css'  href='https://www.dataquest.io/wp-content/plugins/posts-data-table/assets/js/datatables/datatables.min.css?ver=1.10.18' type='text/css' media='all' />
<link rel='stylesheet' id='posts-data-table-css'  href='https://www.dataquest.io/wp-content/plugins/posts-data-table/assets/css/posts-data-table.min.css?ver=1.3' type='text/css' media='all' />
<link rel='stylesheet' id='ignition-style-css'  href='https://www.dataquest.io/wp-content/themes/ignition-child/style.css?ver=1.401.2.1550684985' type='text/css' media='all' />
<link rel='stylesheet' id='thrive-reset-css'  href='https://www.dataquest.io/wp-content/themes/ignition/css/reset.css' type='text/css' media='all' />
<link rel='stylesheet' id='thrive-main-style-css'  href='https://www.dataquest.io/wp-content/themes/ignition/css/main_navy.css?ver=2014123' type='text/css' media='all' />
<link rel='stylesheet' id='chld_thm_cfg_separate-css'  href='https://www.dataquest.io/wp-content/themes/ignition-child/ctc-style.css?ver=1.401.2.1550684985' type='text/css' media='all' />
<link rel='stylesheet' id='thrive-apprentice-style-css'  href='https://www.dataquest.io/wp-content/themes/ignition/appr/css/apprentice_green.css?ver=20120208' type='text/css' media='all' />
<link rel='stylesheet' id='prism-theme-css'  href='https://www.dataquest.io/wp-content/plugins/ank-prism-for-wp/out/prism-css.min.css?ver=1550607458' type='text/css' media='all' />
<script type='text/javascript'>
/* <![CDATA[ */
var THO_Head = {"variations":[],"post_id":"21694","element_tag":"thrive_headline","woo_tag":"tho_woo"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/plugins/thrive-headline-optimizer/frontend/js/header.min.js?ver=1.2.0'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-includes/js/jquery/jquery.js'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-includes/js/jquery/jquery-migrate.min.js'></script>
<link rel='https://api.w.org/' href='https://www.dataquest.io/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.dataquest.io/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.dataquest.io/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.3" />
<link rel='shortlink' href='https://www.dataquest.io/?p=21694' />
<link rel="alternate" type="application/json+oembed" href="https://www.dataquest.io/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.dataquest.io%2Fblog%2Fexcel-vs-python%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://www.dataquest.io/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.dataquest.io%2Fblog%2Fexcel-vs-python%2F&#038;format=xml" />
<style type="text/css" id="tve_global_variables">:root{--tcb-color-0:rgb(35, 42, 61);--tcb-color-1:rgb(132, 132, 157);--tcb-color-2:rgb(77, 127, 223);--tcb-color-3:rgb(97, 209, 153);--tcb-color-4:rgb(0, 0, 0);--tcb-color-5:rgb(0, 0, 0);--tcb-color-6:rgb(0, 0, 0);--tcb-color-7:rgb(212, 212, 212);--tcb-color-8:rgb(137, 138, 142);--tcb-color-9:rgb(242, 243, 247);--tcb-color-10:rgba(35, 42, 61, 0.77);--tcb-color-11:rgb(97, 209, 153);--tcb-color-12:rgb(255, 255, 255);--tcb-color-13:rgb(35, 42, 61);--tcb-gradient-0:linear-gradient(90deg, rgb(97, 209, 153) 0%, rgb(78, 126, 222) 98%);}</style>	<script>
		/************* Helper functions ******************/
		function isInArray(value, array) {
		  return array.indexOf(value) > -1;
		}
		function getHostFromUrl(url) {
			var a=document.createElement('a');
			a.href=url;
			return a.hostname;
		}
		function getUrlVar(key){
			var result = new RegExp(key + "=([^&]*)", "i").exec(window.location.search); 
			return result && unescape(result[1]) || ""; 
		}
		/************* End of Helper Functions ******************/
		
		
		/******************** Cookie helper functions ************************/
		function checkCookieExists(cookie_name) {
			return document.cookie.indexOf(cookie_name + '=') !== -1;
		}
		function setCookie(name,value,domain,days) {
			var expires = "";
			if (days) {
				var date = new Date();
				date.setTime(date.getTime() + (days*24*60*60*1000));
				expires = "; expires=" + date.toUTCString();
			}
			document.cookie = name + "=" + (value || "")  + expires +  ";domain=" + domain + "; path=/";
		}
		/******************** End Of Cookie helper functions ******************/
		
		function setRefererUrlCookie() {
			var cookie_domain = '.dataquest.io'
			var internal_hosts =  ['www.dataquest.io', 'dataquest.io', ]

			/* Set Landing page cookie if it doesnot exist */
			if (!checkCookieExists('dataquest-cac-landing-page')) {
				setCookie('dataquest-cac-landing-page', window.location.pathname, cookie_domain, 7)
			}
			
			var referrer = document.referrer
			if (!referrer) {
				return
			}
			host = getHostFromUrl(referrer)
			
			/* If referrer is not coming from dataquest, set it in cookie and override landing_page cookie */
			if (!isInArray(host, internal_hosts)) {
				setCookie('dataquest-cac-referer-url', referrer, cookie_domain, 365)
				setCookie('dataquest-cac-landing-page', window.location.pathname, cookie_domain, 365)
			}
		}

		function setUTMCodesCookies() {
			var utm_codes = ['utm_source','utm_campaign','utm_content','utm_term','utm_medium']
			var cookie_prefix = 'dataquest-cac-'
			var cookie_domain = '.dataquest.io'
			
			for (code in utm_codes) {
				var utm_code = utm_codes[code]
				var code_value = getUrlVar(utm_code)
				var cookie_name = cookie_prefix + utm_code.replace('_', '-')
				
				if (code_value) {
					setCookie(cookie_name, code_value, cookie_domain, 365)
				}
			}
		}
									
		
		function setLandingPageLastTouchCookie() {
			var cookie_domain = '.dataquest.io'
			setCookie('dataquest-cac-landing-page-last-touch', window.location.pathname, cookie_domain, 365)

		}
		
		setUTMCodesCookies()
		setRefererUrlCookie()
		setLandingPageLastTouchCookie()

	</script>
<style>
.latex_thm, .latex_lem, .latex_cor, .latex_defn, .latex_prop, .latex_rem{
  margin:0;padding:5px;
  background: lightcyan;
  border: solid 3px green;
  -moz-border-radius: 1.0em;
  -webkit-border-radius: 7px;
  box-shadow: 0 0 0 green;
}
.latex_em{
  font-style: italic;
}
.bibtex_title{
  font-weight:bold;
  color: #004b33;
}
a.bibtex_title{
  text-decoration: none;
}
.latex_proof::after{
  content: "\220E";
  color: gray;
  text-align: right;
  display: block;
  font-size: 1.2em;
}
</style>
        <style type="text/css">
            .hidden {display:none;}
        </style>
        <script type="text/javascript">
         jQuery('html').addClass('hidden');
	            
	 jQuery(document).ready(function($) {		            
	    $('html').removeClass('hidden');	            
	 });  
        </script>
    		<style type="text/css">body { background:#ffffff; }.cnt article h1.entry-title a { color:#0a0a0a; }.cnt article h2.entry-title a { color:#0a0a0a; }.bSe h1 { color:#0a0a0a; }.bSe h2 { color:#0a0a0a; }.bSe h3 { color:#0a0a0a; }.bSe h4 { color:#0a0a0a; }.bSe h5 { color:#0a0a0a; }.bSe h6 { color:#0a0a0a; }.cnt article p { color:#0a0a0a; }.cnt .bSe article { color:#0a0a0a; }.cnt article h1 a, .tve-woocommerce .bSe .awr .entry-title, .tve-woocommerce .bSe .awr .page-title{font-family:Open Sans,sans-serif;}.bSe h1{font-family:Open Sans,sans-serif;}.bSe h2,.tve-woocommerce .bSe h2{font-family:Open Sans,sans-serif;}.bSe h3,.tve-woocommerce .bSe h3{font-family:Open Sans,sans-serif;}.bSe h4{font-family:Open Sans,sans-serif;}.bSe h5{font-family:Open Sans,sans-serif;}.bSe h6{font-family:Open Sans,sans-serif;}.cnt, .bp-t, .tve-woocommerce .product p, .tve-woocommerce .products p{font-family:Open Sans,sans-serif;font-weight:400;}article strong {font-weight: bold;}.bSe h1, .bSe .entry-title { font-size:36px; }.cnt { font-size:14px; }.out { font-size:14px; }.thrivecb { font-size:14px; }.aut p { font-size:14px; }.cnt p { line-height:2em; }.lhgh { line-height:2em; }.dhgh { line-height:2em; }.dhgh { font-size:14px; }.lhgh { font-size:14px; }.thrivecb { line-height:2em; }.cnt .cmt, .cnt .acm { background-color:#4d7fdf; }.trg { border-color:#4d7fdf transparent transparent; }.str { border-color: transparent #4d7fdf transparent transparent; }.brd ul li { color:#4d7fdf; }.bSe a { color:#4d7fdf; }.bSe .faq h4{font-family:Open Sans,sans-serif;font-weight:400;}article strong {font-weight: bold;}header ul.menu > li > a { color:#ffffff; }header .phone .apnr, header .phone .apnr:before, header .phone .fphr { color:#ffffff; }header ul.menu > li > a:hover { color:#ffffff; }header .phone:hover .apnr, header .phone:hover .apnr:before, header .phone:hover .fphr { color:#ffffff; }header nav > ul > li.current_page_item > a:hover { color:#ffffff; }header nav > ul > li.current_menu_item > a:hover { color:#ffffff; }header nav > ul > li.current_menu_item > a:hover { color:#ffffff; }header nav > ul > li > a:active { color:#ffffff; }header #logo > a > img { max-width:180px; }header ul.menu > li.h-cta > a { color:#FFFFFF!important; }header ul.menu > li.h-cta >a  { background:#ffffff; }header ul.menu > li.h-cta > a { border-color:#ffffff; }header ul.menu > li.h-cta > a:hover { color:#FFFFFF!important; }header ul.menu > li.h-cta > a:hover { background:#ffffff; }.product.woocommerce.add_to_cart_inline a.button.product_type_simple.ajax_add_to_cart { background-color:#FFFFFF; }.product.woocommerce.add_to_cart_inline a.button.product_type_simple.ajax_add_to_cart { border-color:#4d7fdf; }.product.woocommerce.add_to_cart_inline a.button.product_type_simple.ajax_add_to_cart { color:#4d7fdf; }.product.woocommerce.add_to_cart_inline a.button.product_type_simple.ajax_add_to_cart:hover { background-color:#4d7fdf; }.woocommerce p.return-to-shop a.button.wc-backward { border-color:#4d7fdf; }.woocommerce p.return-to-shop a.button.wc-backward { color:#4d7fdf; }.woocommerce p.return-to-shop a.button.wc-backward:hover { background:#4d7fdf; }.woocommerce p.return-to-shop a.button.wc-backward:hover { color:#FFFFFF; }</style>
		<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #ffffff; }
</style>
	<link rel="icon" href="https://www.dataquest.io/wp-content/uploads/2019/01/cropped-rocket-icon-50x50.jpg" sizes="32x32" />
<link rel="icon" href="https://www.dataquest.io/wp-content/uploads/2019/01/cropped-rocket-icon-300x300.jpg" sizes="192x192" />
<link rel="apple-touch-icon-precomposed" href="https://www.dataquest.io/wp-content/uploads/2019/01/cropped-rocket-icon-300x300.jpg" />
<meta name="msapplication-TileImage" content="https://www.dataquest.io/wp-content/uploads/2019/01/cropped-rocket-icon-300x300.jpg" />
		<style type="text/css" id="wp-custom-css">
			body  {font-family: ingra, sans-serif; color: #232a3d;}

button, input, select, textarea, h4, h5, h6, .widget-area.sidebar, nav, p, .thrv-styled-list-item, .bSe h4, ol li, ul li  {font-family: ingra, sans-serif; font-weight: 300; color: #232a3d; }

.single-post article, .single-post article ul li, .single-post article p, .single-post article blockquote, .single-post article ol li {line-height: 1.8em; font-size: 15px; font-family: merriweather;}

.page-template-fullwidth-page p, .page-template-default p, .page-template-default ul li, .page-template-default ol li {font-family: ingra, sans-serif; line-height: 1.7em; margin: 0px 0px; font-size: 16px; color: #232a3d!important; font-weight: 300;}

.tcb-button-text {font-family: industry, sans-serif!important; font-weight: 700; letter-spacing: 1px;}

h1, h2, h3 {font-family: industry, sans-serif!important; color: #232a3d!important; font-weight: 700!important;}

.bSe h1 {font-size: 36px!important;}

.scn>ul a:hover, section[id*='nav_menu-'] .scn ul a:hover, .scn ul[id*='menu'] a:hover {margin: 0px;}

.path-box h3 {font-size: 17px!important; font-weight: 900; margin: 0px 0px 5px 0px; line-height: 1em}

.path-box p {line-height: 1.6em; font-size: 14px;}

.path-box a {text-decoration: none!important;}

.path-box-button-text {text-transform: uppercase!important; letter-spacing: 1px;}


.post-template-default h1, .post-template-default h2, .post-template-default h3 {padding: 40px 0px 20px}

.post-template-default h4, .post-template-default h5, .post-template-default h6 {padding: 10px 0px 20px}


#floating_menu header {padding: 2px!important; height: 58px!important;
}

header {border-bottom: 0px!important;}


.menu, .page_item a, .menu-item a {font-size: 11px; text-transform: UPPERCASE; text-decoration: none; font-weight: 100; line-height: 1em;}

header #logo > a > img {padding: 10px 0px 10px 0px;}

header nav>ul>li.menu-item-has-children:hover>a:after, 
header nav>ul>li.menu-item-has-children>a:after {color: #ffffff!important; font-weight: 100; }

header nav>ul.menu li.current-menu-item>a, header nav>ul.menu li.current_page_item>a, header nav ul#menu li.current-menu-item>a, header nav ul#menu li.current_page_item>a {color: #ffffff;}

header nav li.col-no-4>ul.sub-menu, header nav li.col-no-4 ul.sub-menu.position_menu {margin-top: 20px;}

header nav>ul>li.menu-item-has-children>a:after {display: none;}

header nav li.has-extended>ul.sub-menu {background: #ffffff;}

header nav li.has-extended>ul.sub-menu li.menu-item {background: transparent; }

header nav li.has-extended>ul.sub-menu li.menu-item a[href] {color: #232a3d;}

header nav li.has-extended>ul.sub-menu li.menu-item a[href]:hover {color: #4d7fdf; background-color: rgb(242, 243, 247);}

#menu-item-11096 a.colch {padding: 18px 8px 8px 8px; font-size: 14px; font-weight: 900;}

#menu-item-11069 a.colch, #menu-item-11053 a.colch, #menu-item-11054 a.colch {color: #ffffff;}
 

li.has-extended>ul.sub-menu>li ul.sub-menu li {margin: 0px 0px 0px 0px;}

header nav li.has-extended>ul.sub-menu>li ul.sub-menu li a {line-height: 1.6em; padding: 10px 0px 10px 10px; font-size: 12px;}

@media only screen and (max-width: 769px) {
	header .hmn .rmn {background-image: none; border: 0px; }
}

@media only screen and (min-width: 769px) {
	#menu-item-20221 a {background-color: #61D199; border-radius: 5px;  padding: 6px 8px 5px; margin-top: -6px;}}

@media only screen and (max-width: 768px) {
	header nav li.has-extended ul.sub-menu li a {display: none;} 

li#menu-item-11094	ul.sub-menu {display: none!important;}
}


.csbwfs-social-widget {
    z-index: 100!important;
}

.page-template-default .csbwfs-social-widget, .blog .csbwfs-social-widget {display: none;}

:not(pre) > code[class*="language-"], pre[class*="language-"] {background-color: #000000; border-radius: 3px;}

p code {
background-color: #e5eff5;
padding: 1px 3px;
border-radius: 3px;
font-size: .95em;
color: #000000;}

pre {background: #000000; margin-top: -10px;}
pre code {font-size: 13px; padding: 0px; color: #ffffff; background: #000000;}

code[class*="language-"], pre[class*="language-"] {font-size: 15px; margin-bottom: 20px; margin-top: -10px;}



.single-post table {width: 85%; margin: 30px auto; }

.single-post table th {background-color: #f4f8fb; /*text-transform: lowercase;*/ color: #232a3d!important;}

.single-post table td, article table th {font-size: 15px; border: 1px solid #e3ecf3; font-family: ingra, sans-serif; }

.single-post h1, .single-post h2, .single-post h3, .single-post h4, .single-post h5 {font-family: merriweather!important;}

.single-post .bSe h1.entry-title {font-size: 38px!important; color: #232a3d!important;}
.single-post h2 {font-size: 32px; color: #232a3d!important;}
.single-post h3 {font-size: 29px; color: #232a3d!important;}
.single-post h4 {font-size: 26px; color: #232a3d!important;}
.single-post h5 {font-size: 23px; color: #232a3d!important;}

.page-header .page-title {text-transform: none; color: #ffffff; font-weight: normal; letter-spacing: 0em; font-size: 18px; line-height: 24px;}


.widgets-list-layout-links  {line-height: 1.3; font-size: 14px}


.sidebar .widget .widget-title {font-family: ingra, sans-serif; letter-spacing: 1.5px; padding-bottom: 15px; border-top: 1px solid #e9e9e9!important; padding-top: 25px;}

.site-branding .site-title, .site-branding .site-text-logo {font-size: 20px; color: #ffffff; font-weight: normal; text-transform: none;}

#content img {display: block; margin: 0px auto;}

div table{
    overflow-x:auto;
}

.scn ul li a {color: #232a3d;}
.scn ul li a:hover {color: #4d7fdf;}


.err {text-align: center;}
.err h1 {display: none;}
.err h4 {display: none;}
form.lost {
	display: inline-block; width: 80%;}

.err .csc {text-align: left;}


.sAs .srh input.search-field, .sAs .srh .search_field {
	width: 285px;}

 .srh input.search-field,  .srh .search_field {background-color: #ffffff; box-shadow: none; border-top: 2px solid #31394a; border-left: 2px solid #31394a; border-bottom: 2px solid #31394a; border-right: 0px;}

input.search-field {font-size: 13px; line-height: 15px; padding: 10px;}

input.search-field::-webkit-input-placeholder { 
  color: transparent;
}
input.search-field::-moz-placeholder {
  color: transparent;
}
input.search-field:-ms-input-placeholder { /* IE 10+ */
  color: transparent;
}
	
input.search-field:-moz-placeholder {
  color: transparent;
}

form.srh {margin-left: 0px; padding-top: 5px; }

input.search-field, .search_field {font-size: 1em; font-weight: 100; }

input.search-field, .search-button, .submit_btn {
    height: 40px; margin: 0px; padding: 0px 0px 0px 5px;
	}

.search-button, .submit_btn {background-color: #31394a!important; background-image:none; border: none; height: 47px!important;}

.sAs .search-button, .sAs .submit_btn { 
    width: 50px; z-index: 1000; position: relative;  top: -47px; left: 292px; }

@media only screen and (max-width: 1080px) {
.sAs .search-button, .sAs .submit_btn { 
	width: 50px; z-index: 1000; position: relative;  top: -0px; left: 0px; }
	form.srh {margin-bottom: 20px;}
	
	.sAs .srh input.search-field, .sAs .srh .search_field {
    height: 43px;
}
}


svg.tcb-icon {
	color: #61d199; 
}

.gmt-edd-slack-row {
	text-align: center;
}

input#gmt_edd_slack_email {
  width: 280px;
	text-align: left;
	padding: 10px 30px 10px 15px; 
}

button.gmt-edd-slack-form-button {
font-size: 16px; line-height: 15px; padding: 14px 30px; background-color: #61D199; color: #ffffff;  margin: 5px 10px; border: 0px; border-radius: 3px; text-transform: uppercase; width: 250px;
}

.thrv_wrapper.thrv-pricing-table .tcb-pricing-table-box-container .tcb-pt-featured-box .tve-content-box-background {
    border-top-color: #61d199;
}


.tvo-set12-template.tve_teal .tvo-testimonial-quote {color: #4d7fdf!important;}

.tvo-set12-template.tve_teal .tvo-testimonial-name {color: #4d7fdf!important;}


.directory-coursebox p {margin-top: 0px; font-size: 14px; margin-bottom: 22px!important; }

.directory-coursebox .tcb--cols--2 {margin-top: 5px;}

.directory-course-label p {margin: 3px 0px; }

a .thrv-content-box p {color: #ffffff!important; text-decoration: none!important;}

@media only screen and (max-width: 769px) {
	.directory-coursebox .tcb--cols--2, .directory-coursebox .tcb--cols--2 p { text-align: center!important; }}

@media only screen and (max-width: 769px) {
	.directory-coursebox .tcb--cols--2 .directory-course-label p { margin-top: -20px;}}

@media only screen and (max-width: 769px) {
	.directory-coursebox .tcb--cols--2 .thrv-button a { margin-top: -20px;}}

.directory-coursebox .tcb-button-texts {padding: 0px 20px;}

@media only screen and (max-width: 767px){.thrv_wrapper.thrv-columns.directory-course-columns {margin-top: -40px;}}

.path-box-button-text p {font-family: industry!important; font-weight: 700;}

.course-box-course-info p {font-family: industry!important; font-weight: 700; font-size: 14px}

.course-box h2 {font-size: 22px;}

.course-box p {font-size: 13px;}

.course-box a {text-decoration: none!important;}

.scn.aut {
    box-shadow: none;
    background: #ffffff;
    border-radius: 5px;
    border: 2px solid #d4d4d4;
    margin-bottom: 10px;
}

.scn h5 {font-family: industry, sans-serif; font-weight: 900;}

.blog .awr h2.entry-title, .archive .awr h2.entry-title, .search .awr h2.entry-title  { font-size: 24px!important; font-weight: 900; line-height: 1.4em!important; margin-top: 10px; margin-bottom: 10px; font-family: ingra, serif!important; text-align: left;}
.cnt article h2.entry-title a {color: #232a3d!important;}

.cnt article h2.entry-title a:hover {color: #4d7fdf!important;}

.blog .awr .category a, .archive .awr .category a, .search .awr .category a {font-family: ingra, sans-serif; text-decoration: none; font-size: 13px; text-transform: uppercase; letter-spacing: 1px; font-weight: 300; line-height: 2em; }

.blog .awr p, .archive .awr p, .search .awr p {font-family: merriweather, serif!important; margin-bottom: 0px!important; line-height: 1.9em; color: #232a3d!important;}

.blog footer, .archive footer, .search footer  {margin: 5px!important;}




.cnt .rltp p, .cnt .rltp h5, .cnt .rltpi a p, .cnt .rltpi h5  {font-family: ingra, sans-serif;  font-weight: 500; font-size: 15px; color: #232a3d; }



.cnt .rltp p:before, .cnt .rltpi p:before {display: none;}

.cnt .rltp h5, .cnt .rltpi h5 {margin: 5px 0px;}

.cnt article ul {
    list-style: disc;
}



.cnt section footer {}



footer .ftw {background-color: #232a3d; padding: 40px 0px 0px 0px;}

footer .ftw ul li a, footer .ftw .textwidget  {color: #ffffff;  font-size: 12px;}

footer .copy {display: none;}

.tvo-set12-template.tvo-testimonials-display-single .tvo-testimonial-quote {font-family: industry!important; font-size: 168px!important; margin-left: -10px;}

.tvo-testimonials-display.tvo-set12-template .tvo-testimonial-display-item h4, .tvo-testimonials-display.tvo-set12-template .tvo-testimonial-display-item p {font-family: ingra!important;  font-size: 15px!important; font-weight: 100!important; font-style: normal!important; color: #0C0A48!important;}



.tvo-testimonial-info svg {display: none; }

.tvo-testimonial-info .tvo-testimonial-name, .tvo-testimonial-info .tvo-testimonial-role {
font-family: ingra!important;  font-size: 15px!important;
color: #232a3d!important;}

.tvo-testimonial-info .tvo-testimonial-name {font-weight: 700!important;;}



.tvo-set12-template.tvo-testimonials-display-single .tvo-testimonial-quote:before, .tvo-set12-template.tvo-testimonials-display-single .tvo-testimonial-quote:after {display: none;}

@media only screen and (min-width: 768px) {
	.why-p, .mission-two-columns {column-count: 2; column-gap: 40px; }}

.why-p p, .why-p ul li {font-size: 15px; margin-bottom: 20px!important; font-weight: 300;}

.gmt-edd-slack-alert-success {border: 1px solid #000000; padding: 20px; text-align: center;}

.sub-picker .tve_scT .tve_scTC {background: transparent; border: 0px;}

.sub-picker .tve_scT>ul li {border: 1px solid #cccccc; text-transform: capitalize; }

.sub-picker .tve_scT>ul li.annual {border-radius: 5px;}

.sub-picker .tve_scT>ul li.monthly {border-radius: 5px; margin-bottom: 5px!important;}

.thrv_wrapper.thrv-tabbed-content div.tve_scT>ul li span {width: 70px; font-size: 12px; font-family: industry; letter-spacing: 1px; line-height: 1em; }

.sub-picker ul.mon-ann {display: block; margin: auto auto!important; width: 200px; }

.sub-picker ul li.annual, .sub-picker ul li.monthly {padding: 10px!important; }

.thrv-pricing-table {margin-top: -40px}

.thrv_wrapper.thrv-tabbed-content div.tve_scT>ul li:hover {color: #232a3d; }

.main-testimonial .tvo-testimonials-display.tvo-set12-template .tvo-testimonial-display-item p {font-size: 20px!important;}

.mission-ppp-horizontal {display: none;}

.mission-outline p {font-size: 14px;  line-height: 1.6em; padding-top: 8px;}

.mission-outline br {line-height: 3em}

.mission-outline {column-count: 1; column-gap: 10px; }

.ctb {border: none;}
.ctb h5  {display: none;}

#comments {border: none;}

.cmc {margin: 0 auto 20px auto; }
.cmc .awe {display: none;}
.cmc, .cmc p {font-family: ingra!important; color: #232a3d!important; }

.cmb {margin: 0px;}

.lrp p {font-family: industry, sans-serif!important; font-size: 18px!important; color: #232a3d!important;}

textarea:not(.editor-post-title__input) {background: #ffffff; box-shadow: none; border: 2px solid #e9e9e9; }

.lrp input[type="submit"] {
    background: #61D199;
    border-radius: 5px;
	border: 0px;
    color: #ffffff;
    font-size: 1em;
    font-family: industry, sans-serif;
    margin: 20px 0;
    padding: 12px 36px 12px 36px;
    text-align: center;
}

.lrp input[type="text"] {
    box-sizing: border;
    border-radius: 5px;
	box-shadow: none;
    background: #ffffff;
    border: 1px solid #e9e9e9;
    color: #232a3d;
    float: left;
    font-size: 1em;
    font-weight: 700;
    font-family: ingra, sans-serif;
    height: 32px;
    margin: 0% 4.2% 3% 0%;
    padding: 0% 0% 0% 2%;
    width: 30.3%;
}

.lrp textarea::-webkit-input-placeholder {
   color:transparent;
}

.lrp textarea:-moz-placeholder { /* Firefox 18- */
   color:transparent; 
}

.lrp textarea::-moz-placeholder {  /* Firefox 19+ */
   color:transparent; 
}

.lrp textarea:-ms-input-placeholder {  
   color:transparent;
}

.footer-links a {color: #ffffff; line-height: 2}


#tve_tcb2_set-021 {display: none;}

a.tcb-button-link {background-color: #61D199; text-transform: uppercase; padding: 12px 30px; border-radius: 5px!important;}

a.tcb-button-link:hover {background-color: rgb(97, 209, 153) !important; }


.industry p {font-family: industry, sans-serif!important; }

body.home {background-color: #232a3d;}

.course-header p strong, .mission-header p strong, .mission-header .tcb-plain-text {font-size: 12px!important; letter-spacing: 3px;
    color: rgb(77, 127, 223) !important;}

.mission-header .tcb-plain-text {margin-bottom: 10px;}

.directory-coursebox h3 {margin-top: 5px}

.post-template-default .sidebar-blog-title h2 {font-family: industry!important; margin-top: -10px; margin-bottom: 0px;}

.post-template-default .sidebar-blog-subtitle { margin-bottom: 20px;}

#signup_form .error {
    display: block;
    line-height: .7em;
    padding: 0;
    color: #a94342;
    font-family: ingra,sans-serif;
    font-weight: 400;
	border: 1px solid #990000;
}


.cnt .sAs .ttl {font-family: industry; color: #31394a; border: 0px; margin-bottom: 0px; font-size: 22px; margin-left: 5px;}

section[id*='nav_menu-'] .scn ul li, .scn ul[id*='menu'] li {border-bottom: 0px; padding: 10px 0px; list-style-type: disc; margin-left: 40px; color: #31394a; font-family: ingra; letter-spacing: 1px;}

.scn ul li a {font-size: 13px;}

.scn>ul li:after, section[id*='nav_menu-'] .scn ul li:after, .scn ul[id*='menu'] li:after {content: none; }


.cnt .sAs>section {margin-bottom: 20px!important;}

#nav_menu-3 {margin-top: -20px;}

.cnt .sAs.right {border: 0px;}

.tve_flt .tve_contents_table .tve_ct_title {font-family: industry; text-align: left; display: block; margin: 0px ; padding: 0px 0px 10px; font-weight: bold; font-size: 24px;}

blockquote {
	padding: 20px;
	color: #428bca;
	border-left: 5px solid #428bca;
}

.sidebar-blog-title h2 {margin: 0px; padding: 10px}
		</style>
					</head>
<body class="post-template-default single single-post postid-21694 single-format-standard custom-background locale-en-us">

<div class="flex-cnt">
	<div id="floating_menu" >
				<header class="hbc" style="background-image:none; background-color:#232a3d">
						<div class="wrp side_logo clearfix has_phone" id="head_wrp">
				<div class="h-i">
																	<div id="logo"
							     class="left">
								<a class="lg" href="https://www.dataquest.io/">
									<noscript><img src="https://www.dataquest.io/wp-content/uploads/2019/01/dq-1.png"
									     alt="Dataquest"/></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://www.dataquest.io/wp-content/uploads/2019/01/dq-1.png"
									     alt="Dataquest"/>
								</a>
							</div>
																						<div class="hmn">
							<div class="awe rmn right">&#xf0c9;</div>
							<div class="clear"></div>
						</div>
						<div class="mhl" id="nav_right">
																													<!-- Cart Dropdown -->
								<nav class="right"><ul id="menu-primary" class="menu"><li  id="menu-item-20226" class="menu-item menu-item-type-post_type menu-item-object-page"><a  href="https://www.dataquest.io/directory/">Courses</a></li>
<li  id="menu-item-20223" class="menu-item menu-item-type-taxonomy menu-item-object-category"><a  href="https://www.dataquest.io/blog/topics/student-stories/">Student Stories</a></li>
<li  id="menu-item-20225" class="menu-item menu-item-type-post_type menu-item-object-page"><a  href="https://www.dataquest.io/were-hiring/">We&#8217;re Hiring</a></li>
<li  id="menu-item-20220" class="menu-item menu-item-type-post_type menu-item-object-page current_page_parent"><a  href="https://www.dataquest.io/blog/">Blog</a></li>
<li  id="menu-item-20221" class="menu-item menu-item-type-custom menu-item-object-custom"><a  href="http://app.dataquest.io/signup">Start Learning</a></li>
<li  id="menu-item-20222" class="menu-item menu-item-type-custom menu-item-object-custom"><a  href="http://app.dataquest.io">Log In</a></li>
</ul></nav>														<div class="clear"></div>
						</div>
												<div class="clear"></div>
														</div>
			</div>
		</header>
			</div>
	
			



			<div class="bspr"></div>
<div class="wrp cnt">
			<div class="bSeCont">
				<section class="bSe left">

																	
<article>
	<div class="awr">
					<h1 class="entry-title">Excel vs Python: How to Do Common Data Analysis Tasks</h1>
							<noscript><img src="https://www.dataquest.io/wp-content/uploads/2019/02/xlwings-tutorial-python-excel-1040x520.jpg" alt="excel-vs-python"
			     title="xlwings-tutorial-python-excel"
			     class="fwI"/></noscript><img src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://www.dataquest.io/wp-content/uploads/2019/02/xlwings-tutorial-python-excel-1040x520.jpg" alt="excel-vs-python"
			     title="xlwings-tutorial-python-excel"
			     class="lazyload fwI"/>
		
		<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        In this tutorial, we&#8217;ll compare Excel and Python by looking at how to perform basic analysis tasks across both platforms.
      </p>
<p>
        Excel is the most commonly used data analysis software in the world. Why? It&#8217;s easy to get the hang of and fairly powerful once you master it. In contrast, Python&#8217;s reputation is that it&#8217;s more difficult to use, though what you can do with it is once you&#8217;ve learned it is almost unlimited.
      </p>
<p>
        But how do these two data analysis tools actually compare? Their reputations don&#8217;t really reflect reality. In this tutorial, we&#8217;ll take a look at some common data analysis tasks to demonstrate how accessible Python data analysis can be.
      </p>
<p>
        This tutorial assumes you have an intermediate-level knowledge of Excel, including using formulas and pivot tables.
      </p>
<p>
        We&#8217;ll be using the Python library <strong>pandas</strong>, which is designed facilitate data analysis in Python, but you don&#8217;t need any Python or pandas knowledge for this tutorial.
      </p>
<h2 id="Why-Use-Python-vs-Excel?">
        Why Use Python vs Excel?<a class="anchor-link" href="#Why-Use-Python-vs-Excel?"></a><br />
      </h2>
<p>
        Before we start, you might be wondering why Python is even worth considering. Why couldn&#8217;t you just keep using Excel?
      </p>
<p>
        Even though Excel is great, there are some areas that make a programming language like Python better for certain types of data analysis. Here are some reasons from our post <a href="https://www.dataquest.io/blog/9-reasons-excel-users-should-consider-learning-programming/">9 Reasons Excel Users Should Consider Learning Programming</a>:
      </p>
<ol>
<li>
          You can read and work with almost any kind of data.
        </li>
<li>
          Automated and repetitive tasks are easier.
        </li>
<li>
          Working with large data sets is <em>much</em> faster and easier.
        </li>
<li>
          It&#8217;s easier for others to reproduce and audit your work.
        </li>
<li>
          Finding and fixing errors is easier.
        </li>
<li>
          Python is open source, so you can see what&#8217;s behind the libraries you use.
        </li>
<li>
          Advanced statistics and machine learning capabilities.
        </li>
<li>
          Advanced data visualization capabilities.
        </li>
<li>
          Cross-platform stability — your analysis can be run on any computer.
        </li>
</ol>
<p>
        To be clear, we don&#8217;t advocate leaving Excel behind &#8211; it&#8217;s a powerful tool with many uses! But as an Excel user, being able to also leverage the power of Python can save you hours of time and open up career advancement opportunities.
      </p>
<p>
        It&#8217;s worth remembering the two tools can work well in tandem, and you may find that some tasks are best left in Excel, while others would benefit from the power, flexibility, and transparency that&#8217;s offered by Python.
      </p>
<h2 id="Importing-Our-Data">
        Importing Our Data<a class="anchor-link" href="#Importing-Our-Data"></a><br />
      </h2>
<p>
        Let&#8217;s start by familiarizing ourselves with the data we&#8217;ll be working with for this tutorial. We&#8217;ll use fictional data about a company with salespeople. Here&#8217;s what our data looks like in Excel:
      </p>
<p>
        <noscript><img src="https://dq-blog-files.s3.amazonaws.com/excel-python/data_excel.png" alt="the data in excel" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://dq-blog-files.s3.amazonaws.com/excel-python/data_excel.png" alt="the data in excel" />
      </p>
<p>
        Our data is saved as a CSV file called <code>sales.csv</code>. In order to import our data in pandas, we need to start by importing the pandas library itself.
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>import pandas as pd</code></pre>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        The code above imports pandas and <strong>aliases</strong> it to the syntax <code>pd</code>. That may sound complicated, but it&#8217;s actually just a kind of nickname — it means that in the future we can just use <code>pd</code> to refer to <code>pandas</code> so that we don&#8217;t have to type out the full word each time.
      </p>
<p>
        To read our file we use <code>pd.read_csv()</code>:
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>sales = pd.read_csv('sales.csv')
sales</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div style="max-height:500px;max-width:1500px;overflow:auto;">
<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
                .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
              </style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
                    </th>
<th>
                      Name
                    </th>
<th>
                      Department
                    </th>
<th>
                      Start Date
                    </th>
<th>
                      End Date
                    </th>
<th>
                      Sales January
                    </th>
<th>
                      Sales February
                    </th>
<th>
                      Sales March
                    </th>
</tr>
</thead>
<tbody>
<tr>
<td>
                      0
                    </td>
<td>
                      Sally
                    </td>
<td>
                      A
                    </td>
<td>
                      2017-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      32000.0
                    </td>
</tr>
<tr>
<td>
                      1
                    </td>
<td>
                      Antonio
                    </td>
<td>
                      A
                    </td>
<td>
                      2018-06-23
                    </td>
<td>
                      NaN
                    </td>
<td>
                      46000.0
                    </td>
<td>
                      48000.0
                    </td>
<td>
                      49000.0
                    </td>
</tr>
<tr>
<td>
                      2
                    </td>
<td>
                      Rebecca
                    </td>
<td>
                      A
                    </td>
<td>
                      2019-02-22
                    </td>
<td>
                      2019-03-27
                    </td>
<td>
                      NaN
                    </td>
<td>
                      8000.0
                    </td>
<td>
                      10000.0
                    </td>
</tr>
<tr>
<td>
                      3
                    </td>
<td>
                      Ali
                    </td>
<td>
                      B
                    </td>
<td>
                      2017-05-15
                    </td>
<td>
                      NaN
                    </td>
<td>
                      28000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      25000.0
                    </td>
</tr>
<tr>
<td>
                      4
                    </td>
<td>
                      Sam
                    </td>
<td>
                      B
                    </td>
<td>
                      2011-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      38000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      31000.0
                    </td>
</tr>
<tr>
<td>
                      5
                    </td>
<td>
                      Viknesh
                    </td>
<td>
                      C
                    </td>
<td>
                      2019-01-25
                    </td>
<td>
                      NaN
                    </td>
<td>
                      2000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      29000.0
                    </td>
</tr>
<tr>
<td>
                      6
                    </td>
<td>
                      Jon
                    </td>
<td>
                      C
                    </td>
<td>
                      2012-08-14
                    </td>
<td>
                      2012-10-16
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
</tr>
<tr>
<td>
                      7
                    </td>
<td>
                      Sarah
                    </td>
<td>
                      C
                    </td>
<td>
                      2018-05-17
                    </td>
<td>
                      NaN
                    </td>
<td>
                      41000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      30000.0
                    </td>
</tr>
<tr>
<td>
                      8
                    </td>
<td>
                      Sierra
                    </td>
<td>
                      C
                    </td>
<td>
                      2017-03-31
                    </td>
<td>
                      NaN
                    </td>
<td>
                      33000.0
                    </td>
<td>
                      35000.0
                    </td>
<td>
                      32000.0
                    </td>
</tr>
</tbody>
</table></div>
</p></div>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        We assigned the result of <code>pd.read_csv()</code> to a variable called <code>sales</code>, which we&#8217;ll use to refer to our data. We also put the variable name on its own in the last line of our code, which prints the data in a nicely formatted table.
      </p>
<p>
        Immediately, we can notice a few differences between how pandas represents the data vs what we saw in Excel:
      </p>
<ul>
<li>
          In pandas, the row numbers start at 0 versus 1 in Excel.
        </li>
<li>
          The column names in pandas are taken from the data, versus Excel where columns are labelled using letters.
        </li>
<li>
          Where there is a missing value in the original data, pandas has the placeholder <code>NaN</code> which indicates that the value is missing, or <strong>null</strong>.
        </li>
<li>
          The sales data has a decimal point added to each value, because pandas stores numeric values that include null (<code>NaN</code>) values as numeric type known as <strong>float</strong> (this doesn&#8217;t effect anything for us, but we just wanted to explain why this is).
        </li>
</ul>
<p>
        Before we learn our first pandas operation, we&#8217;ll quickly learn a little about how our data is stored.
      </p>
<p>
        Let&#8217;s use the <code>type()</code> function to look at the type of our <code>sales</code> variable:
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>type(sales)</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="output_text output_subarea output_execute_result" style="max-height:500px;max-width:1500px;overflow:auto;">
<pre class='language-'>pandas.core.frame.DataFrame</pre>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        This output tells us that our <code>sales</code> variable is a <strong>DataFrame</strong> object, which is a specific type of object in pandas. Most of the time in pandas when we want to modify a dataframe, we&#8217;ll use special syntax called a dataframe <strong>method</strong>, which allows us to access specific functionality that relates to the dataframe objects. We&#8217;ll see an example of that in a moment when we complete our first task in pandas!
      </p>
<h2 id="Sorting-Data">
        Sorting Data<a class="anchor-link" href="#Sorting-Data"></a><br />
      </h2>
<p>
        Let&#8217;s learn how to sort our data in Excel and Python. Currently, our data isn&#8217;t sorted. In Excel, if we wanted to sort our data by the <code>"Start Date"</code> column, we would:
      </p>
<ul>
<li>
          Select our data.
        </li>
<li>
          Click the &#8216;Sort&#8217; button on the toolbar.
        </li>
<li>
          Select &#8216;Start Date&#8217; in the dialog box that opens.
        </li>
</ul>
<p>
        <noscript><img src="https://dq-blog-files.s3.amazonaws.com/excel-python/sort_excel.png" alt="sorting in excel" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://dq-blog-files.s3.amazonaws.com/excel-python/sort_excel.png" alt="sorting in excel" />
      </p>
<p>
        In pandas, we use the <code>DataFrame.sort_values()</code> method. We mentioned methods briefly a moment ago. In order to use them we have to replace <code>DataFrame</code> with the name of the dataframe we want to apply the method to — in this case <code>sales</code>. If you&#8217;ve worked with lists in Python, you will be familiar with this pattern from the <code>list.append()</code> method.
      </p>
<p>
        We provide the column name to the method to tell it which column to sort by:
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>sales = sales.sort_values("Start Date")
sales</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div style="max-height:500px;max-width:1500px;overflow:auto;">
<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
                .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
              </style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
                    </th>
<th>
                      Name
                    </th>
<th>
                      Department
                    </th>
<th>
                      Start Date
                    </th>
<th>
                      End Date
                    </th>
<th>
                      Sales January
                    </th>
<th>
                      Sales February
                    </th>
<th>
                      Sales March
                    </th>
</tr>
</thead>
<tbody>
<tr>
<td>
                      4
                    </td>
<td>
                      Sam
                    </td>
<td>
                      B
                    </td>
<td>
                      2011-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      38000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      31000.0
                    </td>
</tr>
<tr>
<td>
                      6
                    </td>
<td>
                      Jon
                    </td>
<td>
                      C
                    </td>
<td>
                      2012-08-14
                    </td>
<td>
                      2012-10-16
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
</tr>
<tr>
<td>
                      0
                    </td>
<td>
                      Sally
                    </td>
<td>
                      A
                    </td>
<td>
                      2017-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      32000.0
                    </td>
</tr>
<tr>
<td>
                      8
                    </td>
<td>
                      Sierra
                    </td>
<td>
                      C
                    </td>
<td>
                      2017-03-31
                    </td>
<td>
                      NaN
                    </td>
<td>
                      33000.0
                    </td>
<td>
                      35000.0
                    </td>
<td>
                      32000.0
                    </td>
</tr>
<tr>
<td>
                      3
                    </td>
<td>
                      Ali
                    </td>
<td>
                      B
                    </td>
<td>
                      2017-05-15
                    </td>
<td>
                      NaN
                    </td>
<td>
                      28000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      25000.0
                    </td>
</tr>
<tr>
<td>
                      7
                    </td>
<td>
                      Sarah
                    </td>
<td>
                      C
                    </td>
<td>
                      2018-05-17
                    </td>
<td>
                      NaN
                    </td>
<td>
                      41000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      30000.0
                    </td>
</tr>
<tr>
<td>
                      1
                    </td>
<td>
                      Antonio
                    </td>
<td>
                      A
                    </td>
<td>
                      2018-06-23
                    </td>
<td>
                      NaN
                    </td>
<td>
                      46000.0
                    </td>
<td>
                      48000.0
                    </td>
<td>
                      49000.0
                    </td>
</tr>
<tr>
<td>
                      5
                    </td>
<td>
                      Viknesh
                    </td>
<td>
                      C
                    </td>
<td>
                      2019-01-25
                    </td>
<td>
                      NaN
                    </td>
<td>
                      2000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      29000.0
                    </td>
</tr>
<tr>
<td>
                      2
                    </td>
<td>
                      Rebecca
                    </td>
<td>
                      A
                    </td>
<td>
                      2019-02-22
                    </td>
<td>
                      2019-03-27
                    </td>
<td>
                      NaN
                    </td>
<td>
                      8000.0
                    </td>
<td>
                      10000.0
                    </td>
</tr>
</tbody>
</table></div>
</p></div>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        The values in our dataframe have been sorted with one simple line of pandas code!
      </p>
<h2 id="Summing-the-Sales-Values">
        Summing the Sales Values<a class="anchor-link" href="#Summing-the-Sales-Values"></a><br />
      </h2>
<p>
        The last three columns of our data contain sales values for the first three months of the year, known as the first quarter. Our next task will be to sum those values in both Excel and Python.
      </p>
<p>
        Let&#8217;s start by looking at how we achieve this in Excel:
      </p>
<ul>
<li>
          Enter a new column name <code>"Sales Q1"</code> in cell <code>H1</code>.
        </li>
<li>
          In cell H2, use the <code>SUM()</code> formula and specify the range of cells using their coordinates.
        </li>
<li>
          Drag the formula down to all rows.
        </li>
</ul>
<p>
        <noscript><img src="https://dq-blog-files.s3.amazonaws.com/excel-python/sum_excel.png" alt="summing in excel" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://dq-blog-files.s3.amazonaws.com/excel-python/sum_excel.png" alt="summing in excel" />
      </p>
<p>
        In pandas, when we perform an operation it automatically applies it to every row at once. We&#8217;ll start by selecting the three column by using their names in a list:
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>q1_columns = sales[["Sales January", "Sales February", "Sales March"]]
q1_columns</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div style="max-height:500px;max-width:1500px;overflow:auto;">
<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
                .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
              </style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
                    </th>
<th>
                      Sales January
                    </th>
<th>
                      Sales February
                    </th>
<th>
                      Sales March
                    </th>
</tr>
</thead>
<tbody>
<tr>
<td>
                      4
                    </td>
<td>
                      38000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      31000.0
                    </td>
</tr>
<tr>
<td>
                      6
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
</tr>
<tr>
<td>
                      0
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      32000.0
                    </td>
</tr>
<tr>
<td>
                      8
                    </td>
<td>
                      33000.0
                    </td>
<td>
                      35000.0
                    </td>
<td>
                      32000.0
                    </td>
</tr>
<tr>
<td>
                      3
                    </td>
<td>
                      28000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      25000.0
                    </td>
</tr>
<tr>
<td>
                      7
                    </td>
<td>
                      41000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      30000.0
                    </td>
</tr>
<tr>
<td>
                      1
                    </td>
<td>
                      46000.0
                    </td>
<td>
                      48000.0
                    </td>
<td>
                      49000.0
                    </td>
</tr>
<tr>
<td>
                      5
                    </td>
<td>
                      2000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      29000.0
                    </td>
</tr>
<tr>
<td>
                      2
                    </td>
<td>
                      NaN
                    </td>
<td>
                      8000.0
                    </td>
<td>
                      10000.0
                    </td>
</tr>
</tbody>
</table></div>
</p></div>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        Next, we&#8217;ll use the <code>DataFrame.sum()</code> method and specify <code>axis=1</code>, which tells pandas that we want to sum the rows and not the columns. We&#8217;ll specify the new column name by providing it inside brackets:
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>sales["Sales Q1"] = q1_columns.sum(axis=1)
sales</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div style="max-height:500px;max-width:1500px;overflow:auto;">
<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
                .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
              </style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
                    </th>
<th>
                      Name
                    </th>
<th>
                      Department
                    </th>
<th>
                      Start Date
                    </th>
<th>
                      End Date
                    </th>
<th>
                      Sales January
                    </th>
<th>
                      Sales February
                    </th>
<th>
                      Sales March
                    </th>
<th>
                      Sales Q1
                    </th>
</tr>
</thead>
<tbody>
<tr>
<td>
                      4
                    </td>
<td>
                      Sam
                    </td>
<td>
                      B
                    </td>
<td>
                      2011-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      38000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      95000.0
                    </td>
</tr>
<tr>
<td>
                      6
                    </td>
<td>
                      Jon
                    </td>
<td>
                      C
                    </td>
<td>
                      2012-08-14
                    </td>
<td>
                      2012-10-16
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      0.0
                    </td>
</tr>
<tr>
<td>
                      0
                    </td>
<td>
                      Sally
                    </td>
<td>
                      A
                    </td>
<td>
                      2017-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      32000.0
                    </td>
<td>
                      93000.0
                    </td>
</tr>
<tr>
<td>
                      8
                    </td>
<td>
                      Sierra
                    </td>
<td>
                      C
                    </td>
<td>
                      2017-03-31
                    </td>
<td>
                      NaN
                    </td>
<td>
                      33000.0
                    </td>
<td>
                      35000.0
                    </td>
<td>
                      32000.0
                    </td>
<td>
                      100000.0
                    </td>
</tr>
<tr>
<td>
                      3
                    </td>
<td>
                      Ali
                    </td>
<td>
                      B
                    </td>
<td>
                      2017-05-15
                    </td>
<td>
                      NaN
                    </td>
<td>
                      28000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      82000.0
                    </td>
</tr>
<tr>
<td>
                      7
                    </td>
<td>
                      Sarah
                    </td>
<td>
                      C
                    </td>
<td>
                      2018-05-17
                    </td>
<td>
                      NaN
                    </td>
<td>
                      41000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      97000.0
                    </td>
</tr>
<tr>
<td>
                      1
                    </td>
<td>
                      Antonio
                    </td>
<td>
                      A
                    </td>
<td>
                      2018-06-23
                    </td>
<td>
                      NaN
                    </td>
<td>
                      46000.0
                    </td>
<td>
                      48000.0
                    </td>
<td>
                      49000.0
                    </td>
<td>
                      143000.0
                    </td>
</tr>
<tr>
<td>
                      5
                    </td>
<td>
                      Viknesh
                    </td>
<td>
                      C
                    </td>
<td>
                      2019-01-25
                    </td>
<td>
                      NaN
                    </td>
<td>
                      2000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      56000.0
                    </td>
</tr>
<tr>
<td>
                      2
                    </td>
<td>
                      Rebecca
                    </td>
<td>
                      A
                    </td>
<td>
                      2019-02-22
                    </td>
<td>
                      2019-03-27
                    </td>
<td>
                      NaN
                    </td>
<td>
                      8000.0
                    </td>
<td>
                      10000.0
                    </td>
<td>
                      18000.0
                    </td>
</tr>
</tbody>
</table></div>
</p></div>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        In pandas, the &#8220;formula&#8221; we used isn&#8217;t stored. Instead the resulting values are added directly to our dataframe. If we wanted to make an adjustment to the values in our new column, we&#8217;d need to write new code to do it.
      </p>
<h2 id="Joining-Manager-Data">
        Joining Manager Data<a class="anchor-link" href="#Joining-Manager-Data"></a><br />
      </h2>
<p>
        In our spreadsheet, we also have a small table of data on who manages each team:
      </p>
<p>
        <noscript><img src="https://dq-blog-files.s3.amazonaws.com/excel-python/managers_excel.png" alt="managers data in excel" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://dq-blog-files.s3.amazonaws.com/excel-python/managers_excel.png" alt="managers data in excel" />
      </p>
<p>
        Let&#8217;s look at how to join this data in a <code>"Manager"</code> column in Excel and Python. In Excel, we:
      </p>
<ul>
<li>
          start by adding the column name to cell <code>I1</code>.
        </li>
<li>
          use the <code>VLOOKUP()</code> formula in cell <code>I2</code>, specifying:</p>
<ul>
<li>
              to lookup the value from cell <code>B2</code> (the Department)
            </li>
<li>
              in the selection of manager data, which we specify using coordinates
            </li>
<li>
              and that we want to select the value from the second column of that data.
            </li>
</ul>
</li>
<li>
          Click and drag the formula down to all cells.
        </li>
</ul>
<p>
        <noscript><img src="https://dq-blog-files.s3.amazonaws.com/excel-python/vlookup_excel.png" alt="vlookup to join data in excel" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://dq-blog-files.s3.amazonaws.com/excel-python/vlookup_excel.png" alt="vlookup to join data in excel" />
      </p>
<p>
        To work with this data in pandas, first we&#8217;ll need to import it from a second CSV, <code>managers.csv</code>:
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>managers = pd.read_csv('managers.csv')
managers</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div style="max-height:500px;max-width:1500px;overflow:auto;">
<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
                .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
              </style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
                    </th>
<th>
                      Department
                    </th>
<th>
                      Manager
                    </th>
</tr>
</thead>
<tbody>
<tr>
<td>
                      0
                    </td>
<td>
                      A
                    </td>
<td>
                      Manuel
                    </td>
</tr>
<tr>
<td>
                      1
                    </td>
<td>
                      B
                    </td>
<td>
                      Lisa
                    </td>
</tr>
<tr>
<td>
                      2
                    </td>
<td>
                      C
                    </td>
<td>
                      Ruth
                    </td>
</tr>
</tbody>
</table></div>
</p></div>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        In order to join <code>maangers</code> data to <code>sales</code> using pandas, we&#8217;ll use the <code>pandas.merge()</code> function. We provide the following arguments, in order:
      </p>
<ul>
<li>
          <code>sales</code>: the name of the first, or left, dataframe we want to merge
        </li>
<li>
          <code>managers</code>: the name of the second, or right, dataframe we want to merge
        </li>
<li>
          <code>how='left'</code>: the method we want to use to join the data. The <code>left</code> join specifies that no matter what, we want to keep all the rows from our left (first) dataframe.
        </li>
<li>
          <code>on='Department'</code>: The name of the column in both dataframes that we will join on.
        </li>
</ul></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>sales = pd.merge(sales, managers, how='left', on='Department')
sales</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div style="max-height:500px;max-width:1500px;overflow:auto;">
<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
                .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
              </style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
                    </th>
<th>
                      Name
                    </th>
<th>
                      Department
                    </th>
<th>
                      Start Date
                    </th>
<th>
                      End Date
                    </th>
<th>
                      Sales January
                    </th>
<th>
                      Sales February
                    </th>
<th>
                      Sales March
                    </th>
<th>
                      Sales Q1
                    </th>
<th>
                      Manager
                    </th>
</tr>
</thead>
<tbody>
<tr>
<td>
                      0
                    </td>
<td>
                      Sam
                    </td>
<td>
                      B
                    </td>
<td>
                      2011-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      38000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      95000.0
                    </td>
<td>
                      Lisa
                    </td>
</tr>
<tr>
<td>
                      1
                    </td>
<td>
                      Jon
                    </td>
<td>
                      C
                    </td>
<td>
                      2012-08-14
                    </td>
<td>
                      2012-10-16
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      0.0
                    </td>
<td>
                      Ruth
                    </td>
</tr>
<tr>
<td>
                      2
                    </td>
<td>
                      Sally
                    </td>
<td>
                      A
                    </td>
<td>
                      2017-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      32000.0
                    </td>
<td>
                      93000.0
                    </td>
<td>
                      Manuel
                    </td>
</tr>
<tr>
<td>
                      3
                    </td>
<td>
                      Sierra
                    </td>
<td>
                      C
                    </td>
<td>
                      2017-03-31
                    </td>
<td>
                      NaN
                    </td>
<td>
                      33000.0
                    </td>
<td>
                      35000.0
                    </td>
<td>
                      32000.0
                    </td>
<td>
                      100000.0
                    </td>
<td>
                      Ruth
                    </td>
</tr>
<tr>
<td>
                      4
                    </td>
<td>
                      Ali
                    </td>
<td>
                      B
                    </td>
<td>
                      2017-05-15
                    </td>
<td>
                      NaN
                    </td>
<td>
                      28000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      82000.0
                    </td>
<td>
                      Lisa
                    </td>
</tr>
<tr>
<td>
                      5
                    </td>
<td>
                      Sarah
                    </td>
<td>
                      C
                    </td>
<td>
                      2018-05-17
                    </td>
<td>
                      NaN
                    </td>
<td>
                      41000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      97000.0
                    </td>
<td>
                      Ruth
                    </td>
</tr>
<tr>
<td>
                      6
                    </td>
<td>
                      Antonio
                    </td>
<td>
                      A
                    </td>
<td>
                      2018-06-23
                    </td>
<td>
                      NaN
                    </td>
<td>
                      46000.0
                    </td>
<td>
                      48000.0
                    </td>
<td>
                      49000.0
                    </td>
<td>
                      143000.0
                    </td>
<td>
                      Manuel
                    </td>
</tr>
<tr>
<td>
                      7
                    </td>
<td>
                      Viknesh
                    </td>
<td>
                      C
                    </td>
<td>
                      2019-01-25
                    </td>
<td>
                      NaN
                    </td>
<td>
                      2000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      56000.0
                    </td>
<td>
                      Ruth
                    </td>
</tr>
<tr>
<td>
                      8
                    </td>
<td>
                      Rebecca
                    </td>
<td>
                      A
                    </td>
<td>
                      2019-02-22
                    </td>
<td>
                      2019-03-27
                    </td>
<td>
                      NaN
                    </td>
<td>
                      8000.0
                    </td>
<td>
                      10000.0
                    </td>
<td>
                      18000.0
                    </td>
<td>
                      Manuel
                    </td>
</tr>
</tbody>
</table></div>
</p></div>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        If this seems is a bit confusing at first, that&#8217;s OK. The model for joining data in Python is different to what is used in Excel, but it&#8217;s also a lot more powerful. Note that in Python we get to specify <em>exactly</em> how we join our data using clear syntax and column names.
      </p>
<h2 id="Adding-a-Conditional-Column">
        Adding a Conditional Column<a class="anchor-link" href="#Adding-a-Conditional-Column"></a><br />
      </h2>
<p>
        If we look at the <code>"End Date"</code> column, we can see that not all employees are still with the company — those with a missing value are still employed but the rest have left. Our next task will be to create a column which tells us if each salesperson is a current employee. We&#8217;ll perform this in Excel and Python.
      </p>
<p>
        Starting with Excel, to add this column we:
      </p>
<ul>
<li>
          Add a new column name to cell <code>J1</code>.
        </li>
<li>
          Use the <code>IF()</code> formula to check if cell <code>D1</code> (End Date) is empty, and if so fill <code>J2</code> with <code>TRUE</code>, otherwise <code>FALSE</code>.
        </li>
<li>
          Drag the formula down to the cells below.
        </li>
</ul>
<p>
        <noscript><img src="https://dq-blog-files.s3.amazonaws.com/excel-python/if_excel.png" alt="if formula using excel" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://dq-blog-files.s3.amazonaws.com/excel-python/if_excel.png" alt="if formula using excel" />
      </p>
<p>
        In pandas, we use the <code>pandas.isnull()</code> function to check for null values in the <code>"End Date"</code> column, and assign the result to a new column:
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>sales["Current Employee"] = pd.isnull(sales['End Date'])
sales</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div style="max-height:500px;max-width:1500px;overflow:auto;">
<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
                .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
              </style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
                    </th>
<th>
                      Name
                    </th>
<th>
                      Department
                    </th>
<th>
                      Start Date
                    </th>
<th>
                      End Date
                    </th>
<th>
                      Sales January
                    </th>
<th>
                      Sales February
                    </th>
<th>
                      Sales March
                    </th>
<th>
                      Sales Q1
                    </th>
<th>
                      Manager
                    </th>
<th>
                      Current Employee
                    </th>
</tr>
</thead>
<tbody>
<tr>
<td>
                      0
                    </td>
<td>
                      Sam
                    </td>
<td>
                      B
                    </td>
<td>
                      2011-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      38000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      95000.0
                    </td>
<td>
                      Lisa
                    </td>
<td>
                      True
                    </td>
</tr>
<tr>
<td>
                      1
                    </td>
<td>
                      Jon
                    </td>
<td>
                      C
                    </td>
<td>
                      2012-08-14
                    </td>
<td>
                      2012-10-16
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      NaN
                    </td>
<td>
                      0.0
                    </td>
<td>
                      Ruth
                    </td>
<td>
                      False
                    </td>
</tr>
<tr>
<td>
                      2
                    </td>
<td>
                      Sally
                    </td>
<td>
                      A
                    </td>
<td>
                      2017-02-01
                    </td>
<td>
                      NaN
                    </td>
<td>
                      31000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      32000.0
                    </td>
<td>
                      93000.0
                    </td>
<td>
                      Manuel
                    </td>
<td>
                      True
                    </td>
</tr>
<tr>
<td>
                      3
                    </td>
<td>
                      Sierra
                    </td>
<td>
                      C
                    </td>
<td>
                      2017-03-31
                    </td>
<td>
                      NaN
                    </td>
<td>
                      33000.0
                    </td>
<td>
                      35000.0
                    </td>
<td>
                      32000.0
                    </td>
<td>
                      100000.0
                    </td>
<td>
                      Ruth
                    </td>
<td>
                      True
                    </td>
</tr>
<tr>
<td>
                      4
                    </td>
<td>
                      Ali
                    </td>
<td>
                      B
                    </td>
<td>
                      2017-05-15
                    </td>
<td>
                      NaN
                    </td>
<td>
                      28000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      82000.0
                    </td>
<td>
                      Lisa
                    </td>
<td>
                      True
                    </td>
</tr>
<tr>
<td>
                      5
                    </td>
<td>
                      Sarah
                    </td>
<td>
                      C
                    </td>
<td>
                      2018-05-17
                    </td>
<td>
                      NaN
                    </td>
<td>
                      41000.0
                    </td>
<td>
                      26000.0
                    </td>
<td>
                      30000.0
                    </td>
<td>
                      97000.0
                    </td>
<td>
                      Ruth
                    </td>
<td>
                      True
                    </td>
</tr>
<tr>
<td>
                      6
                    </td>
<td>
                      Antonio
                    </td>
<td>
                      A
                    </td>
<td>
                      2018-06-23
                    </td>
<td>
                      NaN
                    </td>
<td>
                      46000.0
                    </td>
<td>
                      48000.0
                    </td>
<td>
                      49000.0
                    </td>
<td>
                      143000.0
                    </td>
<td>
                      Manuel
                    </td>
<td>
                      True
                    </td>
</tr>
<tr>
<td>
                      7
                    </td>
<td>
                      Viknesh
                    </td>
<td>
                      C
                    </td>
<td>
                      2019-01-25
                    </td>
<td>
                      NaN
                    </td>
<td>
                      2000.0
                    </td>
<td>
                      25000.0
                    </td>
<td>
                      29000.0
                    </td>
<td>
                      56000.0
                    </td>
<td>
                      Ruth
                    </td>
<td>
                      True
                    </td>
</tr>
<tr>
<td>
                      8
                    </td>
<td>
                      Rebecca
                    </td>
<td>
                      A
                    </td>
<td>
                      2019-02-22
                    </td>
<td>
                      2019-03-27
                    </td>
<td>
                      NaN
                    </td>
<td>
                      8000.0
                    </td>
<td>
                      10000.0
                    </td>
<td>
                      18000.0
                    </td>
<td>
                      Manuel
                    </td>
<td>
                      False
                    </td>
</tr>
</tbody>
</table></div>
</p></div>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Pivot-Tables">
        Pivot Tables<a class="anchor-link" href="#Pivot-Tables"></a><br />
      </h2>
<p>
        One of the most powerful Excel features is pivot tables, which facilitate data analysis using aggregation. We&#8217;re going to look at two different pivot table applications in Excel and Python.
      </p>
<p>
        We&#8217;ll start with a pivot table in Excel that counts the number of employees in each department:
      </p>
<p>
        <noscript><img src="https://dq-blog-files.s3.amazonaws.com/excel-python/pivot_excel_1.png" alt="department count pivot table" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://dq-blog-files.s3.amazonaws.com/excel-python/pivot_excel_1.png" alt="department count pivot table" />
      </p>
<p>
        This operation — counting the number of times a value occurs in a column — is so common that in pandas it has its own syntax: <code>Series.value_counts()</code>.
      </p>
<p>
        The series type is new to this tutorial, but it&#8217;s quite similar to a DataFrame, which we&#8217;ve already learned about. Series is just the pandas representation of a <em>single</em> row or column.
      </p>
<p>
        Let&#8217;s use the pandas method to calculate the number of employees in each department:
      </p>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>sales['Department'].value_counts()</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div class="output_text output_subarea output_execute_result" style="max-height:500px;max-width:1500px;overflow:auto;">
<pre class='language-'>C    4
A    3
B    2
Name: Department, dtype: int64</pre>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>
        The second pivot table example also aggregates by department, but instead calculates the average Q1 sales:
      </p>
<p>
        <noscript><img src="https://dq-blog-files.s3.amazonaws.com/excel-python/pivot_excel_2.png" alt="department average sales pivot table" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20%20%22%3E%3C/svg%3E' data-src="https://dq-blog-files.s3.amazonaws.com/excel-python/pivot_excel_2.png" alt="department average sales pivot table" />
      </p>
<p>
        In order to calculate this in pandas, we&#8217;ll use the <code>DataFrame.pivot_table()</code> method. We need to specify some arguments:
      </p>
<ul>
<li>
          <code>index</code>: the column to aggregate by.
        </li>
<li>
          <code>values</code>: the column we want to use the values for.
        </li>
<li>
          <code>aggfunc</code>: the aggregation function we want to use, in this case <code>'mean'</code> average.
        </li>
</ul></div>
</p></div>
</div>
<div class="cell border-box-sizing code_cell rendered">
<div class="input">
<pre class='language-python'><code class='language-python'>sales.pivot_table(index='Department', values='Sales Q1', aggfunc='mean')</code></pre>
</p></div>
<div class="output_wrapper">
<div class="output">
<div class="output_area">
<div style="max-height:500px;max-width:1500px;overflow:auto;">
<div class="output_html rendered_html output_subarea output_execute_result">
<div>
<style scoped>
                .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }</p>
<p>    .dataframe tbody tr th {
        vertical-align: top;
    }</p>
<p>    .dataframe thead th {
        text-align: right;
    }
              </style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
                    </th>
<th>
                      Sales Q1
                    </th>
</tr>
<tr>
<th>
                      Department
                    </th>
<th>
                    </th>
</tr>
</thead>
<tbody>
<tr>
<td>
                      A
                    </td>
<td>
                      84666.666667
                    </td>
</tr>
<tr>
<td>
                      B
                    </td>
<td>
                      88500.000000
                    </td>
</tr>
<tr>
<td>
                      C
                    </td>
<td>
                      63250.000000
                    </td>
</tr>
</tbody>
</table></div>
</p></div>
</p></div>
</p></div>
</p></div>
</p></div>
</div>
<div class="cell border-box-sizing text_cell rendered">
<div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Excel-vs-Python:-Summary">
        Excel vs Python: Summary<a class="anchor-link" href="#Excel-vs-Python:-Summary"></a><br />
      </h2>
<p>
        In this tutorial we learned Python equivalents for the following Excel functionality:
      </p>
<ul>
<li>
          Sorting data
        </li>
<li>
          <code>SUM()</code>
        </li>
<li>
          <code>VLOOKUP()</code>
        </li>
<li>
          <code>IF()</code>
        </li>
<li>
          Pivot Tables
        </li>
</ul>
<p>
        For each example we looked at, the pandas syntax was of similar complexity to the formulas or menu options you would use in Excel. But Python offers some advantages, like much faster processing of large data sets, more customization and complexity, and more transparency for error-checking and auditing (since everything you&#8217;ve done is clearly laid out in code, rather than hidden in cells).
      </p>
<p>
        Someone proficient in Excel is more than capable of making the leap to working in Python. Adding Python skills to your skill set will make you a faster and more powerful analyst in the long run, and you&#8217;ll discover new workflows that take advantage of both Excel and Python for more efficient and powerful data analysis than you could do with Excel alone.
      </p>
<p>
        If you&#8217;d like to learn how to analyze data in Python, our <a href="https://www.dataquest.io/path/data-analyst/">Data Analyst in Python</a> path is design to teach you everything you need to know, even if you&#8217;ve never coded before. You&#8217;ll start with two free courses that teach you the Python fundamentals before you move onto learn the pandas library that we&#8217;ve worked with in this tutorial.
      </p>
</p></div>
</p></div>
</div>
<span style="display:none" class="tl-placeholder-f-type-shortcode_21375"></span>
<span id="tho-end-content" style="display: block; visibility: hidden;"></span><span id="tve_leads_end_content" style="display: block; visibility: hidden; border: 1px solid transparent;"></span><div class="saboxplugin-wrap" itemtype="http://schema.org/Person" itemscope itemprop="author"><div class="saboxplugin-gravatar"><noscript><img src="https://secure.gravatar.com/avatar/488062fe3e2d6bbf1da752fa6d89c37f?s=100&#038;d=identicon&#038;r=g" width="100" height="100" alt="Avatar" class="avatar avatar-100 wp-user-avatar wp-user-avatar-100 photo avatar-default" /></noscript><img src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20100%20100%22%3E%3C/svg%3E' data-src="https://secure.gravatar.com/avatar/488062fe3e2d6bbf1da752fa6d89c37f?s=100&#038;d=identicon&#038;r=g" width="100" height="100" alt="Avatar" class="lazyload avatar avatar-100 wp-user-avatar wp-user-avatar-100 photo avatar-default" /></div><div class="saboxplugin-authorname"><a href="https://www.dataquest.io/blog/author/josh-devlin/" class="vcard author" rel="author" itemprop="url"><span class="fn" itemprop="name">Josh Devlin</span></a></div><div class="saboxplugin-desc"><div itemprop="description"><p>Data Scientist at Dataquest.io. Loves Data and Aussie Rules Football. Australian living in Texas.</p>
</div></div><div class="clearfix"></div></div>
		<div class="clear"></div>
				<div class="clear"></div>
							<footer>
				<ul class="meta left">
					<li>
																											in																<span>
                                        <a href="https://www.dataquest.io/blog/topics/data-science-tutorials/">
	                                        Data Science Tutorials                                        </a>
									                                    </span>
																				
																				by <a
								href="https://www.dataquest.io/blog/author/josh-devlin/">Josh Devlin</a>
											</li>
																		<li class="sep">|</li>
												<li>
															December 3, 2019													</li>
														</ul>
								<div class="clear"></div>
			</footer>
					</div>

</article>
<div class="rltpi clearfix">
	<div class="awr">
		<h5>Related Posts</h5>
					<a href="https://www.dataquest.io/blog/sql-joins-tutorial/" class="rlt left">
				<div class="rlti"  style="background-image: url('https://www.dataquest.io/wp-content/uploads/2019/10/sql-database-schema-1895779_1280-510x162.png')"></div>
				<p>SQL Joins Tutorial: Working with Databases</p>
			</a>
					<a href="https://www.dataquest.io/blog/python-list-tutorial/" class="rlt left">
				<div class="rlti"  style="background-image: url('https://www.dataquest.io/wp-content/uploads/2019/07/learn-python-tutorials-510x162.jpg')"></div>
				<p>Python List Tutorial: Lists, Loops, and More!</p>
			</a>
					<a href="https://www.dataquest.io/blog/data-pipelines-tutorial/" class="rlt left">
				<div class="rlti"  style="background-image: url('https://www.dataquest.io/wp-content/uploads/data-pipeline.png')"></div>
				<p>Tutorial: Building An Analytics Data Pipeline In Python</p>
			</a>
					<a href="https://www.dataquest.io/blog/python-datetime-tutorial/" class="rlt left">
				<div class="rlti"  style="background-image: url('https://www.dataquest.io/wp-content/uploads/2019/10/python-datetime-tutorial-510x162.jpg')"></div>
				<p>Python Datetime Tutorial: Manipulate Times, Dates, and Time Spans</p>
			</a>
					</div>
</div><div class="spr"></div>																					
	<script type="text/javascript">
		_thriveCurrentPost = 21694;
	</script>
	<article id="comments">
		<div class="awr">
			
			
			<div id="thrive_container_list_comments">
							</div>

			
					</div>
	</article>
	<div id="comment-bottom"></div>

																			</section>
			</div>
			
	<div class="sAsCont">
		<aside class="sAs right">
							<section id="custom_html-2"><div class="widget_text scn"><div class="textwidget custom-html-widget"><span style="display:none" class="tl-placeholder-f-type-shortcode_11317"></span></div></div></section><section id="search-3"><div class="scn"><form action="https://www.dataquest.io/" method="get" class="srh">
	<div>
		<input type="text" placeholder="Search" class="search-field" name="s"/>
		<button type="submit" class="search-button sBn"></button>
		<div class="clear"></div>
	</div>
</form>
</div></section><section id="nav_menu-3"><div class="scn"><p class="ttl">Browse the blog:</p><div class="menu-left-container"><ul id="menu-left" class="menu"><li id="menu-item-14042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-14042"><a href="https://www.dataquest.io/blog/data-science-career-guide/">Job Application Guide</a></li>
<li id="menu-item-5973" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-5973"><a href="https://www.dataquest.io/blog/topics/data-science-tutorials/">Tutorials</a></li>
<li id="menu-item-5978" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5978"><a href="https://www.dataquest.io/blog/topics/student-stories/">Student Stories</a></li>
<li id="menu-item-5974" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5974"><a href="https://www.dataquest.io/blog/topics/learning-and-motivation/">Learning and Motivation</a></li>
<li id="menu-item-5979" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5979"><a href="https://www.dataquest.io/blog/topics/building-a-data-science-portfolio/">How to Build a Portfolio</a></li>
<li id="menu-item-5977" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5977"><a href="https://www.dataquest.io/blog/topics/data-science-projects/">Data Science Projects</a></li>
</ul></div></div></section><section id="nav_menu-10"><div class="scn"><p class="ttl">More resources:</p><div class="menu-more-resources-container"><ul id="menu-more-resources" class="menu"><li id="menu-item-19385" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-19385"><a href="https://www.dataquest.io/data-science-courses/">Data Science Courses</a></li>
<li id="menu-item-19386" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-19386"><a href="https://www.dataquest.io/python-tutorials-for-data-science/">Python Tutorials</a></li>
<li id="menu-item-19388" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-19388"><a href="https://www.dataquest.io/blog/data-analyst-data-scientist-data-engineer/">Data Analyst vs. Scientist vs. Engineer</a></li>
</ul></div></div></section>			
		</aside>
	</div>

		<div class="clear"></div>
</div>
<div class="clear"></div>
</div>



<footer>
			<div class="ftw" id="dq_footer">
			<div class="wrp cnt">
									<div class="colm twc ">
						<section id="text-5">			<div class="textwidget"><div style="margin: 20px 0px 20px 0px;">
<p><a href="/"><noscript><img src="https://www.dataquest.io/wp-content/uploads/2019/01/dq-1.png" width="170px" height="28px" /></noscript><img class="lazyload" src='data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20170%2028%22%3E%3C/svg%3E' data-src="https://www.dataquest.io/wp-content/uploads/2019/01/dq-1.png" width="170px" height="28px" /></a></p>
</div>
<div style="margin: 20px 0px 20px 0px;">All rights reserved © 2019 – Dataquest Labs, Inc.</div>
<div style="margin: 20px 50px 20px 0px;">We are committed to protecting your personal information and your right to privacy. Privacy Policy last updated June 13th, 2019 &#8211; <a style="color: #ffffff; font-size: 12px;" href="/privacy">review here</a>.</div>
</div>
		</section>					</div>
									<div class="colm twc lst">
						<section id="text-9">			<div class="textwidget"><div class="footer-links" style="font-size: 12px; margin: 20px 0px 0px 0px;">
<div style="float: left; margin-right: 50px;"><a href="https://www.dataquest.io/help" target="_blank" rel="noopener noreferrer">Help</a><br />
<a href="https://www.dataquest.io/blog" target="_blank" rel="noopener noreferrer">Blog</a><br />
<a href="https://www.dataquest.io/directory">Directory</a><br />
<a href="https://community.dataquest.io" target="_blank" rel="noopener noreferrer">Community</a></div>
<div style="float: left; margin-right: 50px;"><a href="https://www.dataquest.io/subscribe">Pricing</a><br />
<a href="https://www.dataquest.io/were-hiring">We&#8217;re Hiring</a><br />
<a href="https://www.dataquest.io/terms">Legals</a><br />
<a href="https://www.dataquest.io/privacy">Privacy</a></div>
<div style="float: left; margin-bottom: 100px;"><a href="https://www.facebook.com/dataquestio" target="_blank" rel="noopener noreferrer">Facebook</a><br />
<a href="https://twitter.com/dataquestio" target="_blank" rel="noopener noreferrer">Twitter</a><br />
<a href="https://www.linkedin.com/company/dataquest-io" target="_blank" rel="noopener noreferrer">LinkedIn</a></div>
</div>
</div>
		</section>					</div>
								<div class="clear"></div>
			</div>
		</div>
			<div class="copy">
		<div class="wrp cnt">
			<p>
											</p>
					</div>
	</div>
	</footer>


	<script>
  !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","debug","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t,e){var n=document.createElement("script");n.type="text/javascript";n.async=!0;n.src="https://cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(n,a);analytics._loadOptions=e};analytics.SNIPPET_VERSION="4.1.0";
  analytics.load("BJhKYEXejzjqXq7xQDFI6N0M5W7HBAH5");
  analytics.page();
  }}();
</script><script type='text/javascript'>
/* <![CDATA[ */
var TVE_Ult_Data = {"ajaxurl":"https:\/\/www.dataquest.io\/wp-admin\/admin-ajax.php","ajax_load_action":"tve_ult_ajax_load","conversion_events_action":"tve_ult_conversion_event","shortcode_campaign_ids":[],"matched_display_settings":[],"campaign_ids":[],"post_id":21694,"is_singular":true,"tu_em":""};
/* ]]> */
</script>
		<script type="text/javascript" src="https://www.dataquest.io/wp-content/plugins/thrive-ultimatum/js/dist/no-campaign.min.js?v=2.2.5.1"></script><style>.lazyload,.lazyloading{opacity:0;}.lazyloaded{opacity:1;transition:opacity 300ms;}</style><noscript><style>.lazyload{display:none;}</style></noscript><script data-noptimize="1">window.lazySizesConfig=window.lazySizesConfig||{};window.lazySizesConfig.loadMode=1;</script><script async data-noptimize="1" src='https://www.dataquest.io/wp-content/plugins/autoptimize/classes/external/js/lazysizes.min.js'></script><span style="display:none" class="tl-placeholder-f-type-ribbon"></span><style type="text/css">.saboxplugin-wrap{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;border:1px solid #eee;width:100%;clear:both;display:block;overflow:hidden;word-wrap:break-word;position:relative}.saboxplugin-wrap .saboxplugin-gravatar{float:left;padding:20px}.saboxplugin-wrap .saboxplugin-gravatar img{max-width:100px;height:auto;border-radius:0;}.saboxplugin-wrap .saboxplugin-authorname{font-size:18px;line-height:1;margin:20px 0 0 20px;display:block}.saboxplugin-wrap .saboxplugin-authorname a{text-decoration:none}.saboxplugin-wrap .saboxplugin-authorname a:focus{outline:0}.saboxplugin-wrap .saboxplugin-desc{display:block;margin:5px 20px}.saboxplugin-wrap .saboxplugin-desc a{text-decoration:underline}.saboxplugin-wrap .saboxplugin-desc p{margin:5px 0 12px}.saboxplugin-wrap .saboxplugin-web{margin:0 20px 15px;text-align:left}.saboxplugin-wrap .sab-web-position{text-align:right}.saboxplugin-wrap .saboxplugin-web a{color:#ccc;text-decoration:none}.saboxplugin-wrap .saboxplugin-socials{position:relative;display:block;background:#fcfcfc;padding:5px;border-top:1px solid #eee}.saboxplugin-wrap .saboxplugin-socials a svg{width:20px;height:20px}.saboxplugin-wrap .saboxplugin-socials a svg .st2{fill:#fff; transform-origin:center center;}.saboxplugin-wrap .saboxplugin-socials a svg .st1{fill:rgba(0,0,0,.3)}.saboxplugin-wrap .saboxplugin-socials a:hover{opacity:.8;-webkit-transition:opacity .4s;-moz-transition:opacity .4s;-o-transition:opacity .4s;transition:opacity .4s;box-shadow:none!important;-webkit-box-shadow:none!important}.saboxplugin-wrap .saboxplugin-socials .saboxplugin-icon-color{box-shadow:none;padding:0;border:0;-webkit-transition:opacity .4s;-moz-transition:opacity .4s;-o-transition:opacity .4s;transition:opacity .4s;display:inline-block;color:#fff;font-size:0;text-decoration:inherit;margin:5px;-webkit-border-radius:0;-moz-border-radius:0;-ms-border-radius:0;-o-border-radius:0;border-radius:0;overflow:hidden}.saboxplugin-wrap .saboxplugin-socials .saboxplugin-icon-grey{text-decoration:inherit;box-shadow:none;position:relative;display:-moz-inline-stack;display:inline-block;vertical-align:middle;zoom:1;margin:10px 5px;color:#444}.clearfix:after,.clearfix:before{content:' ';display:table;line-height:0;clear:both}.ie7 .clearfix{zoom:1}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-twitch{border-color:#38245c}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-addthis{border-color:#e91c00}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-behance{border-color:#003eb0}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-delicious{border-color:#06c}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-deviantart{border-color:#036824}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-digg{border-color:#00327c}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-dribbble{border-color:#ba1655}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-facebook{border-color:#1e2e4f}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-flickr{border-color:#003576}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-github{border-color:#264874}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-google{border-color:#0b51c5}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-googleplus{border-color:#96271a}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-html5{border-color:#902e13}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-instagram{border-color:#1630aa}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-linkedin{border-color:#00344f}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-pinterest{border-color:#5b040e}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-reddit{border-color:#992900}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-rss{border-color:#a43b0a}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-sharethis{border-color:#5d8420}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-skype{border-color:#00658a}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-soundcloud{border-color:#995200}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-spotify{border-color:#0f612c}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-stackoverflow{border-color:#a95009}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-steam{border-color:#006388}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-user_email{border-color:#b84e05}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-stumbleUpon{border-color:#9b280e}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-tumblr{border-color:#10151b}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-twitter{border-color:#0967a0}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-vimeo{border-color:#0d7091}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-windows{border-color:#003f71}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-whatsapp{border-color:#003f71}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-wordpress{border-color:#0f3647}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-yahoo{border-color:#14002d}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-youtube{border-color:#900}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-xing{border-color:#000202}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-mixcloud{border-color:#2475a0}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-vk{border-color:#243549}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-medium{border-color:#00452c}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-quora{border-color:#420e00}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-meetup{border-color:#9b181c}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-goodreads{border-color:#000}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-snapchat{border-color:#999700}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-500px{border-color:#00557f}.saboxplugin-socials.sabox-colored .saboxplugin-icon-color .sab-mastodont{border-color:#185886}.sabox-plus-item{margin-bottom:20px}@media screen and (max-width:480px){.saboxplugin-wrap{text-align:center}.saboxplugin-wrap .saboxplugin-gravatar{float:none;padding:20px 0;text-align:center;margin:0 auto;display:block}.saboxplugin-wrap .saboxplugin-gravatar img{float:none;display:inline-block;display:-moz-inline-stack;vertical-align:middle;zoom:1}.saboxplugin-wrap .saboxplugin-desc{margin:0 10px 20px;text-align:center}.saboxplugin-wrap .saboxplugin-authorname{text-align:center;margin:10px 0 20px}}body .saboxplugin-authorname a,body .saboxplugin-authorname a:hover{box-shadow:none;-webkit-box-shadow:none}a.sab-profile-edit{font-size:16px!important;line-height:1!important}.sab-edit-settings a,a.sab-profile-edit{color:#0073aa!important;box-shadow:none!important;-webkit-box-shadow:none!important}.sab-edit-settings{margin-right:15px;position:absolute;right:0;z-index:2;bottom:10px;line-height:20px}.sab-edit-settings i{margin-left:5px}.saboxplugin-socials{line-height:1!important}.rtl .saboxplugin-wrap .saboxplugin-gravatar{float:right}.rtl .saboxplugin-wrap .saboxplugin-authorname{display:flex;align-items:center}.rtl .saboxplugin-wrap .saboxplugin-authorname .sab-profile-edit{margin-right:10px}.rtl .sab-edit-settings{right:auto;left:0}img.sab-custom-avatar{max-width:75px;}.saboxplugin-wrap .saboxplugin-gravatar img {-webkit-border-radius:50%;-moz-border-radius:50%;-ms-border-radius:50%;-o-border-radius:50%;border-radius:50%;}.saboxplugin-wrap {margin-top:20px; margin-bottom:0px; padding: 0px 0px }.saboxplugin-wrap .saboxplugin-authorname {font-size:16px; line-height:23px;}.saboxplugin-wrap .saboxplugin-desc p, .saboxplugin-wrap .saboxplugin-desc {font-size:13px !important; line-height:20px !important;}.saboxplugin-wrap .saboxplugin-web {font-size:14px;}.saboxplugin-wrap .saboxplugin-socials a svg {width:18px;height:18px;}</style><script type='text/javascript' src='https://www.dataquest.io/wp-content/plugins/thrive-headline-optimizer/frontend/js/triggers.min.js?ver=1.2.0'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-includes/js/imagesloaded.min.js?ver=3.2.0'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-includes/js/masonry.min.js?ver=3.3.2'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-includes/js/jquery/jquery.masonry.min.js'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var tve_frontend_options = {"is_editor_page":"","page_events":[],"is_single":"1","ajaxurl":"https:\/\/www.dataquest.io\/wp-admin\/admin-ajax.php","social_fb_app_id":"","dash_url":"https:\/\/www.dataquest.io\/wp-content\/plugins\/thrive-visual-editor\/thrive-dashboard","translations":{"Copy":"Copy"},"post_id":"21694"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/plugins/thrive-visual-editor/editor/js/dist/frontend.min.js?ver=2.4.5.1'></script>
<script type='text/javascript' src='//www.dataquest.io/wp-content/plugins/thrive-leads/js/frontend.min.js?ver=2.2.6.1'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/plugins/posts-data-table/assets/js/datatables/datatables.min.js?ver=1.10.18'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/plugins/posts-data-table/assets/js/posts-data-table.min.js?ver=1.3'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var ThriveApp = {"ajax_url":"https:\/\/www.dataquest.io\/wp-admin\/admin-ajax.php","lazy_load_comments":"1","comments_loaded":"0","translations":{"ProductDetails":"Product Details"}};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/themes/ignition/js/script.min.js?ver=5.3'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var tve_dash_front = {"ajaxurl":"https:\/\/www.dataquest.io\/wp-admin\/admin-ajax.php","force_ajax_send":"","is_crawler":""};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/plugins/thrive-visual-editor/thrive-dashboard/js/dist/frontend.min.js?ver=2.2.5.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var ThriveApprentice = {"ajax_url":"https:\/\/www.dataquest.io\/wp-admin\/admin-ajax.php","current_post_id":"21694","lang":{"remove_from_fav":"Remove from Favorites","add_to_fav":"Mark as Favorite"},"progress_status":{"new":"new","started":"started","completed":"completed"}};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/themes/ignition/appr/js/thrive-apprentice.js?ver=5.3'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var q2w3_sidebar_options = [{"sidebar":"sidebar-1","margin_top":0,"margin_bottom":0,"stop_id":"dq_footer","screen_max_width":500,"screen_max_height":0,"width_inherit":false,"refresh_interval":1500,"window_load_hook":false,"disable_mo_api":false,"widgets":["custom_html-2","search-3","nav_menu-3","nav_menu-10"]}];
/* ]]> */
</script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/plugins/q2w3-fixed-widget/js/q2w3-fixed-widget.min.js?ver=5.1.9'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-content/plugins/ank-prism-for-wp/out/prism-js.min.js?ver=1550607458'></script>
<script type='text/javascript' src='https://www.dataquest.io/wp-includes/js/wp-embed.min.js?ver=5.3'></script>
<script type="text/javascript">/*<![CDATA[*/var THO_Front = THO_Front || {}; THO_Front.data = {"end_of_content_id":"tho-end-content","is_single":true,"log_url":"https:\/\/www.dataquest.io\/wp-json\/tho\/v1\/logs","active_triggers":{"viewport":"thrive_headline"},"log_engagements":[],"post_id":21694,"test_id":0,"const":{"_e_click":1,"_e_scroll":2,"_e_time":3,"_impression":1,"_engagement":2}}/*]]> */</script><script type="text/javascript">var tcb_post_lists=JSON.parse('[]');</script><script type="text/javascript">/*<![CDATA[*/if ( !window.TL_Const ) {var TL_Const={"security":"e37e221f0b","ajax_url":"https:\/\/www.dataquest.io\/wp-admin\/admin-ajax.php","forms":[],"action_conversion":"tve_leads_ajax_conversion","action_impression":"tve_leads_ajax_impression","ajax_load":1,"main_group_id":17187,"display_options":{"allowed_post_types":[],"flag_url_match":false},"shortcode_ids":["21375","11317"],"custom_post_data":[],"current_screen":{"screen_type":4,"screen_id":21694},"ignored_fields":["email","_captcha_size","_captcha_theme","_captcha_type","_submit_option","_use_captcha","g-recaptcha-response","__tcb_lg_fc","__tcb_lg_msg","_state","_form_type","_error_message_option","_back_url","_submit_option","url","_asset_group","_asset_option","mailchimp_optin"]};} else {ThriveGlobal.$j.extend(true, TL_Const, {"security":"e37e221f0b","ajax_url":"https:\/\/www.dataquest.io\/wp-admin\/admin-ajax.php","forms":[],"action_conversion":"tve_leads_ajax_conversion","action_impression":"tve_leads_ajax_impression","ajax_load":1,"main_group_id":17187,"display_options":{"allowed_post_types":[],"flag_url_match":false},"shortcode_ids":["21375","11317"],"custom_post_data":[],"current_screen":{"screen_type":4,"screen_id":21694},"ignored_fields":["email","_captcha_size","_captcha_theme","_captcha_type","_submit_option","_use_captcha","g-recaptcha-response","__tcb_lg_fc","__tcb_lg_msg","_state","_form_type","_error_message_option","_back_url","_submit_option","url","_asset_group","_asset_option","mailchimp_optin"]})} /*]]> */</script></body>
</html>